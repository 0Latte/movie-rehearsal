PATH=.

# Boot HIP file
BOOT = BB01

# Soak these levels (alternative to "SOAK")
# BOOT = AM01 AM02 AM03 BB01 BB02 BB03 DE01 DE02 TT01 TT02 B101 TR01 TR02 TR03 JK01 JK02 B201 GG02 SC02 B301 PT01 PT02 PT03 B401 B402 BL01 BL02 BL03 BL04 FB01 FB02 FB03

ShowMenuOnBoot = 0

VideoSystemAutoDetect   = 0
VideoSystem = NTSC

# Default language.  No setting defaults to US for NTSC or UK for PAL.
DefaultRegion = US
LanguageSetting = US
LanguageSetting = JP

# Can the player get hurt ? 1 == YES, 0 == NO
G.TakeDamage = 1

# Delay timers on taking damage before you can take damage again
G.DamageTimeHit         = 1.5
G.DamageTimeSurface     = 1.5
G.DamageTimeEGen        = 1.5
G.DamageSurfKnock       = 1.75      # Must be non-zero
G.DamageGiveHealthKnock = 1.75      # Zero to disable knockback by default

# Cheats enabled?
G.CheatSpongeball       = 0
G.CheatPlayerSwitch     = 0
# Can I always portal with the pause menu? 1 == YES, 0 == NO
G.CheatAlwaysPortal     = 0
G.CheatFlyToggle        = 1
G.FriendlySelectMode    = 0
G.DisableForceConversation = 0

# Initial inventory counts (useful for debugging)
G.InitialShinyCount     = 0
G.InitialSpatulaCount   = 0

# Play music?       1 == YES, 0 == NO
NoMusic = 0
# Report SFX sizes?
SFXReport          = 0

# Allow attract mode timer to run during gameplay?
# (Good for public demo builds)
G.AttractModeDuringGameplay = 0

# Rumble by default?
option_vibration = 0

#-----------------------------------------------------------------
# Global powerups -- can be given in game with the following
# events (sent to player or dispatcher):
#
#      Give PowerUp #    = Activates powerup (sets level to 1)
#      Upgrade PowerUp # = Increases powerup level by 1.
#
#      PowerUp 0 = Karate Spin
#      PowerUp 1 = Bash
#      PowerUp 2 = SpongeBowl
#      PowerUp 3 = Wave Guitar
#      PowerUp 4 = Pat Spin
#      PowerUp 5 = Cartwheel
#      PowerUp 6 = BellyFlop
#      PowerUp 7 = Throw
#      PowerUp 8 = SpongeBob Health increase
#      PowerUp 9 = Patrick Health increase

G.KarateSpin	= 1
G.Bash		= 1
G.MachoBowl	= 2
G.WaveGuitar	= 1
G.BellyBump	= 1
G.Cartwheel	= 2
G.BellyFlop	= 1
G.Throw		= 2
G.HealthSB	= 3
G.HealthPat	= 3

# Skill points to spend on powerups at start
G.UnusedSkillPoints = 2

# allow it to run at 60
minVSyncCnt        =  1

## Profiling options:
# '1'
# '2'
# - function level profiling
# '3'
# - assembly level profiling for specified routines
# - For each of the following ProfFunc* use the full name of the
#   function/method to profile. (eg, hot spots identified by profile level 2)
# - NOTE: 'X' and 'Circle' buttons are reserved in profiler mode
# - ALSO: Debug controller 'Start' resets profile tracking
# Profile=2
# ProfFuncTriangle=IntersectBranch
# ProfFuncSquare=IntersectLeaf

#-----------------------------------------------------------------
# HIP/HOP loading
# Enable HIP/HOP scene loading protocol?  1 == YES, 0 == NO
EnableHipHopLoading     =  1

#-----------------------------------------------------------------
# Task menu (says where to warp to for each task)
#Menu01 = BB 01 02
#Menu02 = DE 01 02
#Menu03 = TT 01 02 03
#Menu04 = TR 01 02
#Menu05 = JK 01 02 03
#Menu06 = GG 01 02
#Menu07 = SC 01 02 03
#Menu08 = PT 01 02 03
#Menu09 = TL 01 02 70
#Menu11 = B1 01
#Menu12 = B2 01
#Menu13 = B3 01
#Menu14 = B4 01

# Task menu (says where to warp to for each task)

Menu01 = WA BB02.pointer_01_01_bb02 02 03 04 05 06
Menu02 = WB BB03 AM01.pointer_02_06_BB03 BB04
Menu03 = WC BB01.pointer_03_01_bb01 BB01.pointer_03_02_bb01 BB01.pointer_03_03_bb01 BB01.pointer_03_04_bb01 05 06
Menu04 = WD VMS0 DE01.pointer_04_02_de01 DE01.pointer_04_03_de01 FB01.pointer_04_04_de01 DE01.pointer_04_05_de01 BL01.pointer_04_06_de01
Menu05 = WE DE02.pointer_05_01_de02 DE02.pointer_05_02_de02 DE02.pointer_05_01_de02 DE02.pointer_05_04_de02 05 06
Menu06 = WF TT01 AM02.pointer_06_06_TT01 03 04 05 06
Menu07 = WG TT02.pointer_07_01_tt02 TT02.pointer_07_02_tt02 TT02.pointer_07_03_tt02 TT02.pointer_07_04_tt02 05 06
Menu08 = WH VMS0 02 03 04 05 06
Menu09 = WI TR01._CHECKPOINT_POINTER_01 TR01._CHECKPOINT_POINTER_02 TR01.pointer_09_03_tr01 TR01.pointer_09_04_tr01 05 06
Menu10 = WJ TR02.pointer_10_01_tr02 TR03.POINTER_10_02_TR02 AM03.pointer_10_06_tr02 FB02.pointer_10_04_tr02 TR02.pointer_10_05_tr02 AM03.pointer_10_06_tr02
Menu11 = WK JK01 FB03 JK02.pointer_11_03_jk01 JK01.pointer_11_04_jk01 FB03.pointer_11_05_jk01 BL03.pointer_11_06_jk01
Menu12 = WL B201.pointer_12_01_b201 02 03 04 05 06
Menu13 = WM 01 02 03 04 05 06 ## Disabled, to be removed
Menu14 = WN GG02.pointer_14_01_gg02 GG02.pointer_14_02_gg02 GG02.pointer_14_03_gg02 GG02.pointer_14_04_gg02 05 06
Menu15 = WO SC02.pointer_15_01_sc02 SC02.pointer_15_02_sc02 SC02.pointer_15_03_sc02 SC02.pointer_15_04_sc02 05 06
Menu16 = WP B301.pointer_16_01_b301 02 03 04 05 06
Menu17 = WQ PT01 VMS1 PT03 PT03.CHECKPOINT_POINTER_02 05 06
Menu18 = WR PT02.pointer_18_01_pt02 PT02.pointer_18_02_pt02 PT02.pointer_18_03_pt02 PT02.pointer_18_04_pt02 05 06
Menu19 = WS B401.pointer_19_01_b401 B402 03 04 05 06

#-----------------------------------------------------------------
# Player Mapping

# maps the player to the correct scene
#   DEPRICATED - PLY0:   Don't use
#   DEPRICATED - PLY1:   Don't use
#   PLY2:   Driving (Pat/SB in Patty Wagon)
#   PLY4:   SpongeBall
#
#   PLY3:   Sliding (Pat/SB combined)	DEPRICATED - DON'T USE
#	PLD0:	Sliding Bathtub
#	PLD1:	Sliding Shell
#	PLD2:	Sliding Crown
#
#	PLS0:	Spongebob DEPRICATED - DON'T USE
#	PLS1:	Spongebob Manager Dream
#	PLS2:	Spongebob Goober Hungover
#	PLS3:	Spongebob 'NORMAL' - USED IN SEVERAL LEVELS
#	PLS4:	Spongebob Tuff Tug
#	PLS5:	Spongebob Trench Moustache
#	PLS6:	Spongebob Goober Dream
#	PLS7:	Spongebob Neptune Boss
#
#	PLP0:	Patrick DEPRICATED - DON'T USE
#	PLP1:	Patrick Manager Dream
#	PLP2:	Patrick Goober Hungover
#	PLP3:	Patrick 'NORMAL' - USED IN SEVERAL LEVELS
#	PLP4:	Patrick Tuff Tug
#	PLP5:	Patrick Trench Moustache
#	PLP6:	Patrick Goober Dream
#	PLP7:	Patrick Neptune Boss

ScenePlayerMapping  = MNUS PLS3			#SpongeBob start

ScenePlayerMapping  = BB01 PLY2			#Drive
ScenePlayerMapping  = BB02 PLS1	#SpongeBob start
ScenePlayerMapping  = BB03 PLS2	#Patrick start
ScenePlayerMapping  = BB04 PLP2	#Patrick start

ScenePlayerMapping  = DE01 PLS3 PLP3    #SpongeBob start
ScenePlayerMapping  = DE02 PLD0			#Slide

ScenePlayerMapping  = TT01 PLP4 PLS4    #Patrick start
ScenePlayerMapping  = TT02 PLY2         #Drive (sb in only for cheating)

ScenePlayerMapping  = B101 PLP3         #Frog Fish Boss (Patrick start)

ScenePlayerMapping  = TR01 PLD1			#Slide
ScenePlayerMapping  = TR02 PLS5#SpongeBob start
ScenePlayerMapping  = TR03 PLS5   #SpongeBob start

ScenePlayerMapping  = JK01 PLP3	PLS3	#Patrick start
ScenePlayerMapping  = JK02 PLP3	PLS3	#Patrick start

ScenePlayerMapping  = B201 PLP3			#Dennis Boss 1 (Pat start)

ScenePlayerMapping  = GG02 PLY2         #Drive

ScenePlayerMapping  = SC02 PLD2			#Slide

ScenePlayerMapping  = B301 PLS3			#Dennis Boss 2 (SB start)

ScenePlayerMapping  = PT01 PLS3    #SpongeBob start
ScenePlayerMapping  = VMS0 PLS3
ScenePlayerMapping  = PT02 PLY2         #Drive
ScenePlayerMapping  = PT03 PLS3     	#SpongeBob start

ScenePlayerMapping  = B401 PLS7         #King Neptune Boss (SB start)
ScenePlayerMapping  = B402 PLS7         #100% Reward Scene


# Floating Block Levels
ScenePlayerMapping  = FB01 PLP3			#Patrick start
ScenePlayerMapping  = FB02 PLP3			#Patrick start
ScenePlayerMapping  = FB03 PLP3			#Patrick start
ScenePlayerMapping  = FB04 PLP3			#Patrick start

# Spongeball levels
ScenePlayerMapping  = BL01 PLY4 PLS3	#Spongeball
ScenePlayerMapping  = BL02 PLY4 PLS3	#Spongeball
ScenePlayerMapping  = BL03 PLY4 PLS3	#Spongeball
ScenePlayerMapping  = BL04 PLY4 PLS3	#Spongeball

# Combat arena levels
ScenePlayerMapping  = AM01 PLS3			#SpongeBob start
ScenePlayerMapping  = AM02 PLS3			#SpongeBob start
ScenePlayerMapping  = AM03 PLS3			#SpongeBob start
ScenePlayerMapping  = AM04 PLP3			#Patrick start

#-----------------------------------------------------------------
# Pointer to Player Mapping

#PointerPlayerMapping = TL04 PLY4



# Goofy Goober Platform Level
# PointerPlayerMapping = GG01 PLS6 PLS6 PLS6 PLP6 PLS6


# n. Test Levels
ScenePlayerMapping  = TL00 PLS3 PLP3    #SpongeBob start
ScenePlayerMapping  = TL01 PLS3
ScenePlayerMapping  = TL02 PLP3
ScenePlayerMapping  = TL03 PLS3 PLP3
ScenePlayerMapping  = TL04 PLS3 PLP3
ScenePlayerMapping  = TL05 PLY2 PLS3 PLP3
ScenePlayerMapping  = TL06 PLS3 PLP3
ScenePlayerMapping  = TL07 PLS3 PLP3    #SpongeBob start
ScenePlayerMapping  = TL08 PLS3 PLP3
ScenePlayerMapping  = TL09 PLS3 PLP3

ScenePlayerMapping  = TL10 PLS3 PLP3
ScenePlayerMapping  = TL11 PLS3 PLP3
ScenePlayerMapping  = TL12 PLS3 PLP3
ScenePlayerMapping  = TL13 PLS3 PLP3
ScenePlayerMapping  = TL14 PLS3 PLP3
ScenePlayerMapping  = TL15 PLS3 PLP3
ScenePlayerMapping  = TL16 PLS3 PLP3
ScenePlayerMapping  = TL17 PLS3 PLP3
ScenePlayerMapping  = TL18 PLS3 PLP3
ScenePlayerMapping  = TL19 PLS3 PLP3

ScenePlayerMapping  = TL20 PLS3 PLP3
ScenePlayerMapping  = TL21 PLS3 PLP3
ScenePlayerMapping  = TL22 PLS3 PLP3
ScenePlayerMapping  = TL23 PLS3 PLP3
ScenePlayerMapping  = TL24 PLS3 PLP3
ScenePlayerMapping  = TL25 PLS3 PLP3
ScenePlayerMapping  = TL26 PLS3 PLP3
ScenePlayerMapping  = TL27 PLS3 PLP3
ScenePlayerMapping  = TL28 PLS3 PLP3
ScenePlayerMapping  = TL29 PLS3 PLP3

####

ScenePlayerMapping  = TL61 PLS3 PLP3
ScenePlayerMapping  = TL62 PLS3 PLP3
ScenePlayerMapping  = TL63 PLS3 PLP3


ScenePlayerMapping  = TL70 PLS3 PLP3
ScenePlayerMapping  = TL71 PLS3 PLP3
ScenePlayerMapping  = TL72 PLS3 PLP3
ScenePlayerMapping  = TL73 PLS3 PLP3
ScenePlayerMapping  = TL74 PLS3 PLP3
ScenePlayerMapping  = TL75 PLS3 PLP3
ScenePlayerMapping  = TL76 PLS3 PLP3
ScenePlayerMapping  = TL77 PLS3 PLP3
ScenePlayerMapping  = TL78 PLS3 PLP3
ScenePlayerMapping  = TL79 PLS3 PLP3

ScenePlayerMapping  = TL80 PLS3 PLP3
ScenePlayerMapping  = TL81 PLS3 PLP3
ScenePlayerMapping  = TL82 PLS3 PLP3
ScenePlayerMapping  = TL83 PLS3 PLP3
ScenePlayerMapping  = TL84 PLS3 PLP3
ScenePlayerMapping  = TL85 PLS3 PLP3
ScenePlayerMapping  = TL86 PLS3 PLP3
ScenePlayerMapping  = TL87 PLS3 PLP3
ScenePlayerMapping  = TL88 PLS3 PLP3
ScenePlayerMapping  = TL89 PLS3 PLP3

ScenePlayerMapping  = TL90 PLS3 PLP3
ScenePlayerMapping  = TL91 PLS3 PLP3
ScenePlayerMapping  = TL92 PLS3 PLP3
ScenePlayerMapping  = TL93 PLS3 PLP3
ScenePlayerMapping  = TL94 PLS3 PLP3
ScenePlayerMapping  = TL95 PLS3 PLP3
ScenePlayerMapping  = TL96 PLS3 PLP3
ScenePlayerMapping  = TL97 PLS3 PLP3
ScenePlayerMapping  = TL98 PLS3 PLP3
ScenePlayerMapping  = TL99 PLS3 PLP3

#-----------------------------------------------------------------
# Camera system parameters

zcam_pad_pyaw_scale     = 0.18;         # bigger number => faster yaw rotation about player
zcam_pad_pitch_scale    = 0.77;         # bigger number => faster look up/down

# near position:
zcam_near_d             = 3;        # distance (relative to player)
zcam_near_h             = 1.8;      # height (relative to player)
zcam_near_pitch         = 10;       # SB04 needs these in degrees

# far position:
zcam_far_d              = 5;        # distance (relative to player)
zcam_far_h              = 3;        # height (relative to player)
zcam_far_pitch          = 15;       # SB04 needs these in degrees

# zoomed in, above-looking-down position:
zcam_above_d            = 0.3;      # distance (relative to player)
zcam_above_h            = 2.4;      # height (relative to player)
zcam_above_pitch        = 68;       # SB04 needs these in degrees

# zoomed in, below-looking-up position:
zcam_below_d            = 0.6;      # distance (relative to player)
zcam_below_h            = 0.2;      # height (relative to player)
zcam_below_pitch        = -68;      # SB04 needs these in degrees

# high bounce camera
zcam_highbounce_d       = 0.2       # distance (relative to player)
zcam_highbounce_h       = 5.0       # height (relative to player)
zcam_highbounce_pitch   = 75        # pitch in degrees ??? SHOULD THIS BE CHANGED TO RADIANS ???

# Wall jump camera
zcam_wall_d             = 7.5       # distance (relative to player)
zcam_wall_h             = 2.0       # height (relative to player)
zcam_wall_pitch         = 18        # pitch in degrees ??? SHOULD THIS BE CHANGED TO RADIANS ???

# camera collision parameters
xcam_collis_radius      = 0.4;  # bigger number (not > 0.5 please) should keep sb in frame better.
xcam_collis_stiffness   = 0.3;  # bigger number (keep it between 0 and 1) moves quicker in response.

# "smart" camera rotation parameters (camera "over-rotates" to
# get around behind player when he's running sideways or backwards)
zcam_overrot_min        = 25       # angle at which rotation adjustment starts (0 degrees = forward)
zcam_overrot_mid        = 90       # angle at which rotation adjustment peaks
zcam_overrot_max        = 170      # angle at which rotation adjustment goes back to zero (180=straight back)
zcam_overrot_rate       = 0.1      # rotation speed factor -- keep this small, set to zero to disable
zcam_overrot_tstart     = 1.5      # time where rotation starts while holding down stick
zcam_overrot_tend       = 2.5      # time where rotation peaks while holding down stick
zcam_overrot_velmin     = 3.0      # minimum velocity to cause rotation to adjust
zcam_overrot_velmax     = 5.0      # maximum velocity to cause rotation to adjust
zcam_overrot_tmanual    = 1.5      # extra time rotation is disabled when manual camera controls used


#--------------------------------------------------------------------------------
#   Skip times (when player can use button press to skip something)
#--------------------------------------------------------------------------------
gSkipTimeCutscene       = 1.0     # Minimum of 1.0 allowed
gSkipTimeFlythrough     = 1.0


#-----------------------------------------------------------------
# Tuning values for player character:
#    Anything with a "G" prefix is a global setting (affects all
#    characters).  The other character prefixes are "SB", "Sandy",
#    and "Patrick".
#
G.AnalogMin        = 32
G.AnalogMax        = 110

#-----------------------------------------------------------------
# Sundae powerup info timeout
G.SundaeTime       = 10.0
G.SundaeMult       = 1.5



#-----------------------------------------------------------------
# Shiny Object Values
G.ShinyValuePurple         =    50
G.ShinyValueBlue           =    10
G.ShinyValueGreen          =     5
G.ShinyValueYellow         =     2
G.ShinyValueRed            =     1


#-----------------------------------------------------------------
# Threshold Manliness Points Ranges for scenes
# ManlinessPointsRange = SCENEID LOWER THRESHOLD UPPER THRESHOLD
#-----------------------------------------------------------------


ThresholdPointsRange = BB02 0 4200
ThresholdPointsRange = BB03 0 4200
ThresholdPointsRange = BB01 0 4200

ThresholdPointsRange = DE01 4201 8200
ThresholdPointsRange = FB01 4201 8200
ThresholdPointsRange = BL01 4201 8200
ThresholdPointsRange = DE02 4201 8200

ThresholdPointsRange = TT01 8201 14700
ThresholdPointsRange = BL02 8201 14700
ThresholdPointsRange = TT02 8201 14700

ThresholdPointsRange = B101 8201 14700

ThresholdPointsRange = TR01 14701 20900
ThresholdPointsRange = TR02 14701 20900
ThresholdPointsRange = FB02 14701 20900
ThresholdPointsRange = TR03 14701 20900

ThresholdPointsRange = JK01 20901 25800
ThresholdPointsRange = JK02 20901 25800
ThresholdPointsRange = FB03 20901 25800
ThresholdPointsRange = BL03 20901 25800

ThresholdPointsRange = B201 20901 25800

ThresholdPointsRange = GG02 25801 29800
ThresholdPointsRange = SC02 25801 29800

ThresholdPointsRange = B301 25801 29800

ThresholdPointsRange = PT01 29801 35500
ThresholdPointsRange = PT03 29801 35500
ThresholdPointsRange = BL04 29801 35500
ThresholdPointsRange = PT02 29801 35500

ThresholdPointsRange = B401 29801 35500

ThresholdPointsRange = AM01 0 1
ThresholdPointsRange = AM02 0 1
ThresholdPointsRange = AM03 0 1
ThresholdPointsRange = AM04 0 1




#-----------------------------------------------------------------
# Points needed for next upgrade
# PLEASE MAINTAIN ORDER
# Upgrade1 = 1000
# Upgrade2 = 1500
# For getting upgrade2 player needs additional 1500 points or a 
# total of 1000 + 1500 = 2500
#-----------------------------------------------------------------

Upgrade1  = 250
Upgrade2  = 1250
Upgrade3  = 1500
Upgrade4  = 2000
Upgrade5  = 2000
Upgrade6  = 2000
Upgrade7  = 2000
Upgrade8  = 3000
Upgrade9  = 3000
Upgrade10 = 3000
Upgrade11 = 3000
Upgrade12 = 4000
Upgrade13 = 4000
Upgrade14 = 4000

#-----------------------------------------------------------------
# Manliness Points for enemies
# PLEASE KEEP THESE IN THE SAME ORDER
#-----------------------------------------------------------------
TIKI_WOOD.Normal	= 2
TIKI_WOOD.Below		= 4
TIKI_WOOD.Above		= 1

TIKI_LOVEY.Normal	= 5
TIKI_LOVEY.Below	= 10
TIKI_LOVEY.Above	= 1

TIKI_THUNDER.Normal	= 10
TIKI_THUNDER.Below	= 20
TIKI_THUNDER.Above	= 1

TIKI_QUIET.Normal	= 15
TIKI_QUIET.Below	= 30
TIKI_QUIET.Above	= 1

TIKI_STONE.Normal	= 25
TIKI_STONE.Below	= 50
TIKI_STONE.Above	= 1

CRITJELLY.Normal	= 5
CRITJELLY.Below		= 10
CRITJELLY.Above		= 1

TURBARREL_V1.Normal	= 20
TURBARREL_V1.Below	= 40
TURBARREL_V1.Above	= 1

TURBARREL_V2.Normal	= 25
TURBARREL_V2.Below	= 50
TURBARREL_V2.Above	= 1

TURBARREL_V3.Normal	= 60
TURBARREL_V3.Below	= 120
TURBARREL_V3.Above	= 1

FOGGER_V1.Normal	= 10
FOGGER_V1.Below		= 20
FOGGER_V1.Above		= 1

FOGGER_V2.Normal	= 15
FOGGER_V2.Below		= 30
FOGGER_V2.Above		= 1

FOGGER_V3.Normal	= 20
FOGGER_V3.Below		= 40
FOGGER_V3.Above		= 1

SLAMMER_V1.Normal	= 30
SLAMMER_V1.Below	= 60
SLAMMER_V1.Above	= 1

SLAMMER_V2.Normal	= 35
SLAMMER_V2.Below	= 70
SLAMMER_V2.Above	= 1

SLAMMER_V3.Normal	= 40
SLAMMER_V3.Below	= 80
SLAMMER_V3.Above	= 1

FLINGER_V1.Normal	= 40
FLINGER_V1.Below	= 80
FLINGER_V1.Above	= 1

FLINGER_V2.Normal	= 45
FLINGER_V2.Below	= 90
FLINGER_V2.Above	= 1

FLINGER_V3.Normal	= 50
FLINGER_V3.Below	= 100
FLINGER_V3.Above	= 1

SPINNER_V1.Normal	= 50
SPINNER_V1.Below	= 100
SPINNER_V1.Above	= 1

SPINNER_V2.Normal	= 55
SPINNER_V2.Below	= 110
SPINNER_V2.Above	= 1

SPINNER_V3.Normal	= 85
SPINNER_V3.Below	= 170
SPINNER_V3.Above	= 1

POPPER_V1.Normal	= 60
POPPER_V1.Below		= 120
POPPER_V1.Above		= 1

POPPER_V2.Normal	= 65
POPPER_V2.Below		= 130
POPPER_V2.Above		= 1

POPPER_V3.Normal	= 70
POPPER_V3.Below		= 140
POPPER_V3.Above		= 1

ZAPPER_V1.Normal	= 70
ZAPPER_V1.Below		= 140
ZAPPER_V1.Above		= 1

ZAPPER_V2.Normal	= 80
ZAPPER_V2.Below		= 160
ZAPPER_V2.Above		= 1

ZAPPER_V3.Normal	= 100
ZAPPER_V3.Below		= 200
ZAPPER_V3.Above		= 1

MERVYN_V1.Normal	= 70
MERVYN_V1.Below		= 140
MERVYN_V1.Above		= 1

MERVYN_V2.Normal	= 80
MERVYN_V2.Below		= 160
MERVYN_V2.Above		= 1

MERVYN_V3.Normal	= 100
MERVYN_V3.Below		= 200
MERVYN_V3.Above		= 1

BUCKOTRON_V1.Normal 	= 50
BUCKOTRON_V1.Below  	= 100
BUCKOTRON_V1.Above  	= 1

BUCKOTRON_V2.Normal 	= 50
BUCKOTRON_V2.Below  	= 100
BUCKOTRON_V2.Above  	= 1

BUCKOTRON_V3.Normal 	= 50
BUCKOTRON_V3.Below  	= 100
BUCKOTRON_V3.Above  	= 1

BUCKOTRON_V4.Normal 	= 50
BUCKOTRON_V4.Below  	= 100
BUCKOTRON_V4.Above  	= 1

BUCKOTRON_V5.Normal 	= 50
BUCKOTRON_V5.Below  	= 100
BUCKOTRON_V5.Above  	= 1

BUCKOTRON_V6.Normal 	= 50
BUCKOTRON_V6.Below  	= 100
BUCKOTRON_V6.Above  	= 1

BUCKOTRON_V7.Normal 	= 50
BUCKOTRON_V7.Below  	= 100
BUCKOTRON_V7.Above  	= 1

BUCKETJELLY.Normal 	= 5
BUCKETJELLY.Below  	= 10
BUCKETJELLY.Above  	= 1

#-----------------------------------------------------------------
# Manliness Points values for Combos
# Normal - When the player is between the upper and lower threshold
# Below - When the player is below lower threshold
# Above - When the player is above the upper threshold
#-----------------------------------------------------------------
Combo0.Normal  =     0
Combo0.Below   =     0
Combo0.Above   =     0

Combo1.Normal  =     0
Combo1.Below   =     0
Combo1.Above   =     0

Combo2.Normal  =     0
Combo2.Below   =     0
Combo2.Above   =     0

Combo3.Normal  =     2
Combo3.Below   =     4
Combo3.Above   =     1

Combo4.Normal  =     3
Combo4.Below   =     6
Combo4.Above   =     1

Combo5.Normal  =     5
Combo5.Below   =     10
Combo5.Above   =     1

Combo6.Normal  =     10
Combo6.Below   =     20
Combo6.Above   =     1

Combo7.Normal  =     15
Combo7.Below   =     30
Combo7.Above   =     1

Combo8.Normal  =     20
Combo8.Below   =     40
Combo8.Above   =     1

Combo9.Normal  =     25
Combo9.Below   =     50
Combo9.Above   =     1

Combo10.Normal  =     30
Combo10.Below   =     60
Combo10.Above   =     1

Combo11.Normal  =     40
Combo11.Below   =     80
Combo11.Above   =     1

Combo12.Normal  =     50
Combo12.Below   =     100
Combo12.Above   =     1

Combo13.Normal  =     60
Combo13.Below   =     120
Combo13.Above   =     1

Combo14.Normal  =     75
Combo14.Below   =     150
Combo14.Above   =     1

Combo15.Normal  =     100
Combo15.Below   =     200
Combo15.Above   =     1

G.ComboTimer               =   1.0




#-----------------------------------------------------------------
# Bubble Bash parameters:
#   Time is time to peak height (from launch), Delay is time before launch happens,
#   CVTime is duration of constant-velocity period, before gravity sets in.
#   As far as the animation goes, the transition to "Attack" animation
#   occurs as soon as "Start" animation finishes.  transition to "Strike"
#   occurs when contact is detected, otherwise transitions to normal fall when
#   peak height is reached.
#
G.BBashTime         = 0.315     # JPH:  increased from 0.3 to compensate for code change
G.BBashDelay        = 0.03
G.BBashCVTime       = 0.215     # JPH:  increased from 0.2 to compensate for code change
G.BBashHeight       = 3.3       # JPH:  increased from 3   to compensate for code change
G.BBounceSpeed      = 15

G.BBashGauntletDelay       = 4.0
G.BBashGauntletBlastRadius = 4.0

G.BSpinMinFrame     = 0
G.BSpinMaxFrame     = 11
# The radius of the damage ball at the center of the bubble wand
G.BSpinRadius       = 0.4
G.BSpinReach        = 1.22
G.BSpinReachUpgrade = 1.6

G.SandyMeleeMinFrame = 1.0
G.SandyMeleeMaxFrame = 9.0
G.SandyMeleeRadius   = 0.3

G.BubbleBowlTimeDelay       =  0.75
G.BubbleBowlLaunchPosLeft   =  0.0
G.BubbleBowlLaunchPosUp     =  1.0
G.BubbleBowlLaunchPosAt     =  1.5
G.BubbleBowlLaunchVelLeft   =  0.0
G.BubbleBowlLaunchVelUp     =  0.0
G.BubbleBowlLaunchVelAt     = 10.0
G.BubbleBowlPercentIncrease =  0.85
G.BubbleBowlMinSpeed        =  0.3
G.BubbleBowlMinRecoverTime  =  0.15

G.CartwheelDamageSize	 = 3 # From 0 to 10

#-----------------------------------------------------------------
# Track-sliding parameters:
# - Slide acceleration scales from AccelStart down to AccelEnd as velocity
#   (in direction of slope) increases from AccelVelMin to AccelVelMax.
# - velocity is directly boosted by a combination of AccelPlayerFwd and
#   AccelPlayerSide based on how much the player points the stick
#   in the downward direction.
# - max speed increases from VelMaxStart to VelMaxEnd over
#   VelMaxIncTime, as long as actual speed stays >= max speed.
#   if speed falls below max speed, timer resets.
# - air speed stays constant for AirHoldTime,
#   then drops to zero over AirSlowTime.
#   -   that was the intention anyway...  whats really happening now
#       is that normal air controls blend ON over AirHoldTime period,
#       with speed held constant, then
#       velocity blends OFF over subsequent AirSlowTime period.
#       (seems to work okay, but give us your thoughts.)
#   -   same thing for the AirDbl*Time parameters, except these
#       apply to the double jump when sliding.
# - VelDblBoost is boost to velocity applied on double jump,
#   in current direction (but not uphill).
#
# Recommendations for tweaking:
# - AccelStart/End  = increase to reduce time to accelerate from 0 - 11 m/s without stick control
# - AccelPlayerFwd  = increase to reduce time to accelerate from 0 - 11 m/s with stick pressed forward
# - AccelPlayerBack = increase to reduce time to decelerate
# - AccelPlayerSide = increase to improve turning
# - VelMaxIncTime   = reduce   to reduce time to accelerate from 11 - 16 m/s without stick control
# - VelMaxIncAccel  = increase to reduce time to accelerate from 11 - 16 m/s with stick pressed forward
#
G.SlideAccelVelMin      = 5
G.SlideAccelVelMax      = 10
G.SlideAccelStart       = 8     # Higher value reduces time from 0 - 11 m/s
G.SlideAccelEnd         = 3
G.SlideAccelPlayerFwd   = 5
G.SlideAccelPlayerBack  = 8
G.SlideAccelPlayerSide  = 22.5
G.SlideVelMaxStart      = 11
G.SlideVelMaxEnd        = 16
G.SlideVelMaxIncTime    = 4
G.SlideVelMaxIncAccel   = 1
G.SlideAirHoldTime      = 3
G.SlideAirSlowTime      = .75
G.SlideAirDblHoldTime   = 2
G.SlideAirDblSlowTime   = .5
G.SlideVelDblBoost      = 6
#
#G.SlideAirHoldTime     = 0.75
#G.SlideAirSlowTime     = 3.0
#G.SlideAirDblHoldTime  = 0.5
#G.SlideAirDblSlowTime  = 2.0
#G.SlideVelDblBoost     = 6

#---------------------------------------------------------
# StartSlideAngle - Degrees of slope that scooby starts sliding on
# StopSlideAngle  - Degrees of slope that scooby stops sliding on
#                   ... should be less than StartSlideAngle
#
G.StartSlideAngle   = 20
G.StopSlideAngle    = 10

#---------------------------------------------------------
# RotMatchMaxAngle  - Max degrees of slope that scooby will match
#                       his orientation to
# RotMatchMatchTime - Time (in seconds) it takes scooby to match the slope
# RotMatchRelaxTime - Time (in seconds) it takes scooby to relax to
#                       normal orientation (eg while in air)
#
G.RotMatchMaxAngle  = 30
G.RotMatchMatchTime = 0.1
G.RotMatchRelaxTime = 0.3

# Gravity for all characters
G.Gravity          = 30


#---------------------------------------------------------
# Patrick Pickup / Carry / Throw settings
#
Carry.MinDist       = 0.675     # Min dist to detect item to pick up
Carry.MaxDist       = 1.900     # Max dist to detect item to pick up
Carry.MinHeight     = -0.2      # Min height to detect item
Carry.MaxHeight     = 0.4       # Max height to detect item
Carry.MaxCosAngle   = 45.0      # Angle to detect item to pick up

Carry.ThrowMinDist  = 1.5       # Min distance to autotarget for throwing
Carry.ThrowMaxDist  = 15.0      # Max distance to autotarget for throwing
Carry.ThrowHammerMinDist = 15.0  # Min distance to autotarget for hammer throwing
Carry.ThrowHammerMaxDist = 35.0 # Max distance to autotarget for hammer throwing
Carry.ThrowMinHeight    = -3.0      # Min height to autotarget for throwing
Carry.ThrowMaxHeight    = 5.0       # Max height to autotarget for throwing
Carry.ThrowMaxStack     = 2.75      # Max height fruit can be stacked
Carry.ThrowMaxCosAngle  = 25.0      # Angle to autotarget

Carry.GrabLerpMin   = 0.0       # First interpolation frame for pickup animation
Carry.GrabLerpMax   = 0.2       # Last interpolation frame for pickup animation

#---------------------------------------------------------
# Global settings for throwable objects--note that these
# are settings from where patrick actually releases the
# object in the animation--so the actual height and distance
# is somewhat higher.  You'll have to fiddle with it...
# Note that throw gravity is currently the same as normal
# gravity in the scene, it could be changed though...
#
Carry.ThrowGravity  = 50.0
Carry.ThrowHeight   =  3.0
Carry.ThrowDistance = 10.0
Carry.ThrowPowerAddDistance = 25.0 # distance to add for a full hammer throw


#---------------------------------------------------------
# Fruit bounciness settings.  The first two numbers are velocity
# values over which the bounciness is decayed over time on the floor
# (to make the fruit settle with fewer bounces).  In other words, if the
# fruit is moving 6.0 m/s (MAX) or more, it will bounce at the values shown.
# As the velocity drops to 0.3 m/s (MIN), it will decay to zero--once it
# reaches zero, the object stops its motion and comes to rest.
#
# Higher bounce values = more bounciness.
#   1 == perfect reflection
#   0 == no reflection
#
# Higher friction values = less friction (I know, it seems kinda backwards):
#   1 == frictionless (object will slide forever)
#   0 == infinite friction (object stops on a dime)
#
# Note that off ceilings and walls, there is no friction.  If you wanted to
# change the fruit so that it bounces "in place" where it first lands, you
# could set the FruitFloorFriction to "0".  This might make puzzles where
# you have to transport objects across gaps easier.
#
Carry.FruitFloorDecayMin    = 0.3
Carry.FruitFloorDecayMax    = 6.0
Carry.FruitFloorBounce      = 0.15
Carry.FruitFloorFriction    = 0.4
Carry.FruitCeilingBounce    = 0.1
Carry.FruitWallBounce       = 0.5

# Fruit lifetime in seconds.  Note that it takes around 0.75 seconds to pickup
# and 0.75 seconds to throw for Patrick (with current animations which have
# been accelerated somewhat).
#
Carry.FruitLifetime         = 15.0



# Special moves for the characters
eSPECIAL_Slippers           = 0 # First sneak
eSPECIAL_LampShade          = 0     # First disguise
eSPECIAL_Spring             = 1     # Double jump
eSPECIAL_FootballHelmet     = 0     # Headbutt
eSPECIAL_StickyBoots        = 0     # Anti-sticky boots
eSPECIAL_LightningBolt      = 1     # Buttsmash
eSPECIAL_LightningBoltStun  = 0     # Buttsmash Stun
eSPECIAL_Plungers           = 0 # Anti-slippery
eSPECIAL_Shovel             = 0 # Dig powerup
eSPECIAL_Umbrella           = 0     # Floating
eSPECIAL_BubbleGum          = 0 # Spits wads of sticky/bouncy gum
eSPECIAL_SoapBar            = 0 # Spits soap bubbles
eSPECIAL_BlackKnight        = 0 # Second disguise
eSPECIAL_FlowerPot          = 0 # Are these last two being used?
eSPECIAL_DivingHelmet       = 0     # Last disguise (that you don't use?)




#--------------------------------------------------------------------------------
#   SPONGEBOB SETTINGS
#--------------------------------------------------------------------------------
# Speed values for character.  First value is minimum speed character can move,
# any less than that and character turns in place.  First to second is the walking
# range, second to third is running range.  The last 3 numbers are the
# corresponding stick deflections for those speeds.
#

# SB.MoveSpeed = 0.6,2.5,5,  0.1,0.6,1.0 (E3 values)

# Faster sneak
SB.MoveSpeed = 0.6,4,5,  0.1,0.8,1.0

# Anim speed values, first value is nominal movement speed of animation
# assuming animation playing at normal speed.  The next two values are
# the minimum and maximum allowable speed the animation will play at.
#
SB.AnimSneak = 1, .6, 4
SB.AnimWalk  = 1, .6, 4
SB.AnimRun   = 4.0, .5, 1.5

# Airborne parameters
SB.JumpGravity      = 5
SB.GravSmooth       = 0.2
SB.FloatSpeed       = 3
SB.ButtsmashSpeed   = 24

# Jump parameters
SB.Jump   = 1.4,   0.1, 0.1
SB.Double = 1.4,   0.1, 0.1
SB.Bounce = 2,   0.3, 0.0
SB.Spring = 3.5, 0.3, 0.0
SB.Wall   = 1.5,   0.3, 0.0
SB.WallJumpVelocity = 8.0

# Ledge hanging parameters
# animGrab = time in animation (in frames) to where character is in contact with ledge
#            (time for interpolation from airborne position to grabbing position)
SB.Ledge.animGrab   = 3

# Dampening factor for xz and y velocity while spinning.  The higher this is, the less SB can
# move when spinning.
SB.spin_damp_xz = 15.0
SB.spin_damp_y = 15.0


# REMOVED - SEE spongebobCostumeAtomicOrder IN ZENTPLAYER INSTEAD
# Model ordering indices for SB.  Change these whenever the exporter chooses a different random order.
# SB.model_index.body             = 0
# ... removed, see source control if you need it ...
# SB.model_index.shadow_wand      = 15


#--------------------------------------------------------------------------------
#   CRUISE BUBBLE SETTINGS
#--------------------------------------------------------------------------------
##################################################################
# Variables affecting the aiming state.
##################################################################
# Distance of camera from player.
SB.cb.aim.dist = 2.0
# Height of camera above player.
SB.cb.aim.height = 1.5
# Vertical pitch of the camera, -90 to 90 degrees.
SB.cb.aim.pitch = 0.0
# Speed of the camera movement around center.
SB.cb.aim.speed = 1.0
# Time required to move between two positions.
SB.cb.aim.move_time = 1.0
##################################################################
# Variables affecting the camera attachment state.
##################################################################
# Time to wait before moving the camera to the launch position. *Incomplete
SB.cb.attach.wait_time = 1.0
# Location relative to player to start the launch.  *Incomplete.
SB.cb.attach.offset.x = 1.0
SB.cb.attach.offset.y = 2.0
SB.cb.attach.offset.z = 0.0
##################################################################
# Parameters affecting the missle while flying.
##################################################################
# Missle acceleration.
SB.cb.fly.accel = 6.0
# Max missle velocity.
SB.cb.fly.max_vel = 12.0
# Field-of-view angle while flying.
SB.cb.fly.fov = 100.0
# Maximum time the missle can be in the air.
SB.cb.fly.live_time = 6.0


##################################################################
# Rotational flying parameters.
##################################################################
# Horizontal turn speed.
SB.cb.fly.turn.xdelta = 5.0
# Vertical turn speed.
SB.cb.fly.turn.ydelta = 4.0
# Speed at which horizontal rotation decays.  0 to 1.  A value of 0 never
# stops turning, and a value of 1 stops immediately.
SB.cb.fly.turn.xdecay = 0.99
# Speed at which vertical rotation decays.  0 to 1.  A value of 0 never
# stops turning, and a value of 1 stops immediately.
SB.cb.fly.turn.ydecay = 0.99
# The vertical rotation boundary.  0 to 1.  A value of 0 allows no
# vertical rotation, and a value of 1 allows completely vertical rotation.
SB.cb.fly.turn.ybound = 0.6
# The fraction of turn speed applied to roll.  A positive value rolls into
# the turn, a negative value rolls out of the turn, and a 0 value does not
# roll at all.
SB.cb.fly.turn.roll_frac = 0.2
##################################################################
# Parameters affecting collision distance.
##################################################################
# Minimum distance to hit a non-enemy, non-environment object.
SB.cb.fly.hit_dist.object = 0.2
# Minimum distance to hit an enemy.
SB.cb.fly.hit_dist.enemy = 0.2
# Minimum distance to hit the environment.
SB.cb.fly.hit_dist.env = 0.2
##################################################################
# Parameters affecting the explosion state.
##################################################################
# Delay before returning to player after explosion.  *Incomplete.
SB.cb.explode.wait_time = 1.0



#--------------------------------------------------------------------------------
#   PATRICK SETTINGS
#--------------------------------------------------------------------------------
# Speed values for character.  First value is minimum speed character can move,
# any less than that and character turns in place.  First to second is the walking
# range, second to third is running range.  The last 3 numbers are the
# corresponding stick deflections for those speeds.
#
Patrick.MoveSpeed = 0.6,2.5,5,  0.1,0.6,1.0

# Anim speed values, first value is nominal movement speed of animation
# assuming animation playing at normal speed.  The next two values are
# the minimum and maximum allowable speed the animation will play at.
#
Patrick.AnimSneak = 1.5, .5, 2.5
Patrick.AnimWalk  = 1.5, .5, 2.5
Patrick.AnimRun   = 3.0, .5, 2.5

# Airborne parameters
Patrick.JumpGravity      = 5
Patrick.GravSmooth       = 0.2
Patrick.FloatSpeed       = 3
Patrick.ButtsmashSpeed   = 24

# Jump parameters
Patrick.Jump             = 1.5,   0.1, 0.1
Patrick.Double           = 1.5,   0.1, 0.1
Patrick.Bounce           = 2,   0.3, 0.0
Patrick.Spring           = 3.5, 0.3, 0.0

# Ledge hanging parameters
Patrick.Ledge.animGrab   = 3


#--------------------------------------------------------------------------------
#   SPONGEPAT SETTINGS
#--------------------------------------------------------------------------------
# Speed values for character.  First value is minimum speed character can move,
# any less than that and character turns in place.  First to second is the walking
# range, second to third is running range.  The last 3 numbers are the
# corresponding stick deflections for those speeds.
#
SpongePat.MoveSpeed = 0.6,2.5,5,  0.1,0.6,1.0

# Anim speed values, first value is nominal movement speed of animation
# assuming animation playing at normal speed.  The next two values are
# the minimum and maximum allowable speed the animation will play at.
#
SpongePat.AnimSneak = 1.5, .5, 2.5
SpongePat.AnimWalk  = 1.5, .5, 2.5
SpongePat.AnimRun   = 3.0, .5, 2.5

# Airborne parameters
SpongePat.JumpGravity      = 5
SpongePat.GravSmooth       = 0.2
SpongePat.FloatSpeed       = 3
SpongePat.ButtsmashSpeed   = 24

# Jump parameters
SpongePat.Jump   = 1.5,   0.1, 0.1
SpongePat.Double = 1.5,   0.1, 0.1
SpongePat.Bounce = 2,   0.3, 0.0
SpongePat.Spring = 3.5, 0.3, 0.0

# Ledge hanging parameters
SpongePat.Ledge.animGrab   = 3


#--------------------------------------------------------------------------------
#   SANDY SETTINGS
#--------------------------------------------------------------------------------
# Speed values for character.  First value is minimum speed character can move,
# any less than that and character turns in place.  First to second is the walking
# range, second to third is running range.  The last 3 numbers are the
# corresponding stick deflections for those speeds.
#
Sandy.MoveSpeed = 0.6,2.5,5,  0.1,0.6,1.0

# Anim speed values, first value is nominal movement speed of animation
# assuming animation playing at normal speed.  The next two values are
# the minimum and maximum allowable speed the animation will play at.
#
Sandy.AnimSneak = 1.5, .5, 2.5
Sandy.AnimWalk  = 1.5, .5, 2.5
Sandy.AnimRun   = 3.0, .5, 2.5

# Airborne parameters
Sandy.JumpGravity      = 5
Sandy.GravSmooth       = 0.2
Sandy.FloatSpeed       = 3
Sandy.ButtsmashSpeed   = 24

# Jump parameters
Sandy.Jump   = 1.5,   0.1, 0.1
Sandy.Double = 1.5,   0.1, 0.1
Sandy.Bounce = 2,   0.3, 0.0
Sandy.Spring = 3.5, 0.3, 0.0

# Ledge hanging parameters
Sandy.Ledge.animGrab   = 3


#--------------------------------------------------------------------------------
#   PLAYER OUT-OF-BOUNDS STATE SETTINGS
#--------------------------------------------------------------------------------

# Time in seconds the player can be out of bounds.  Range: greater than 0.
#player.state.out_of_bounds.out_time                    = 9.0
# Time in seconds required before out-of-bounds timer resets.  Range: greater
# than 0, less than out_time.
#player.state.out_of_bounds.reset_time              = 3.0
# Distance of camera from player.
#player.state.out_of_bounds.cam_dist                    = 3.0
# Height of camera above player.
#player.state.out_of_bounds.cam_height              = 1.0
# Time it takes the camera to reorient itself to zoom in and face SB.
#player.state.out_of_bounds.reorient_time           = 0.25
# The resource identifier of the model.
#player.state.out_of_bounds.hand_model              = hand

# Settings affecting how the hand moves while grabbing the player.
#########################
# The max velocity of the hand as it comes in.  Range: greater than 0.
#player.state.out_of_bounds.grab.in_vel             = 1.0
# The distance required for the hand to stop, as a fraction of the screen.
# Controls how suddenly the hand stops.  Range: 0 to 1.
#player.state.out_of_bounds.grab.in_stop_dist       = 0.05
# The amount of time the hand waits before moving back out.
#player.state.out_of_bounds.grab.wait_time          = 0.5
# The max velocity of the hand as it goes out.  Range: greater than 0.
#player.state.out_of_bounds.grab.out_vel                = 0.5
# The distance required for the hand to reach max velocity as it goes out,
# as a fraction of the screen.  Controls how suddenly the hand starts moving.
# Range 0 to 1.
#player.state.out_of_bounds.grab.out_start_dist     = 0.1
# On-screen position of the hand.  This position is in 0 to 1 screen
# coordinates, with (0, 0) at the top left and positive y going down.
#player.state.out_of_bounds.grab.in_x               = 0.0
#player.state.out_of_bounds.grab.in_y               = -0.25
# The time that elapses before fade-out starts.
#player.state.out_of_bounds.grab.fade_start_time        = 2.0
# The time required to fade to black.
#player.state.out_of_bounds.grab.fade_time          = 0.5

# Settings affecting how the hand moves while dropping the player.
########################
# The max velocity of the hand as it comes in.  Range: greater than 0.
#player.state.out_of_bounds.drop.in_vel             = 0.5
# The distance required for the hand to stop, as a fraction of the screen.
# Controls how suddenly the hand stops.  Range: 0 to 1.
#player.state.out_of_bounds.drop.in_stop_dist       = 0.1
# The amount of time the hand waits before moving back out.
#player.state.out_of_bounds.drop.wait_time          = 0.5
# The max velocity of the hand as it goes out.  Range: greater than 0.
#player.state.out_of_bounds.drop.out_vel                = 1.0
# The distance required for the hand to reach max velocity as it goes out,
# as a fraction of the screen.  Controls how suddenly the hand starts moving.
# Range 0 to 1.
#player.state.out_of_bounds.drop.out_start_dist     = 0.05
# On-screen position of the hand.  This position is in 0 to 1 screen
# coordinates, with (0, 0) at the top left and positive y going down.
#player.state.out_of_bounds.drop.in_x               = 0.0
#player.state.out_of_bounds.drop.in_y               = -0.25
# The time that elapses before fading back in.
player.state.out_of_bounds.drop.fade_start_time     = 0.2
# The time required to fade in from black.
#player.state.out_of_bounds.drop.fade_time          = 0.5

# Starting position of the hand, outside the screen rectangle.
#player.state.out_of_bounds.out_y                   = -1.0
# Size scaling fractions.
#player.state.out_of_bounds.hand_size_x             = 0.5
#player.state.out_of_bounds.hand_size_y             = 0.5
# Rotation of the hand, expressed as yaw, pitch, and roll.
#player.state.out_of_bounds.hand_yaw                    = 0.0
#player.state.out_of_bounds.hand_pitch              = 0.0
#player.state.out_of_bounds.hand_roll               = 180.0


#--------------------------------------------------------------------------------
#   SPONGEBOB UNDERWEAR-BUNGEE SETTINGS
#--------------------------------------------------------------------------------
# Uncomment any to change the default values.

# The bottom fraction of the total distance for which the bottom apex animation
# plays.  Between 0 and 0.5
#SB.state.bungee.bottom_anim_frac   = 0.05
# The top fraction of the total distance for which the bottom apex animation
# plays.  Between 0 and 0.5
#SB.state.bungee.top_anim_frac      = 0.1
# Transition time going between bottom and normal animations.
#SB.state.bungee.bottom_anim_time   = 0.1
# Transition time going between top and normal animations.
#SB.state.bungee.top_anim_time      = 0.1
# Transition time going between hit and normal animations.
#SB.state.bungee.hit_anim_time          = 0.1
# Multiplier affecting rotation induced when spongebob takes damage.
#SB.state.bungee.damage_rot             = 10.0
# Time in seconds to delay before restarting after death.
#SB.state.bungee.death_time             = 3.0
# Velocity-based blur intensity.  Increase to blur more.  0 to 1 range.
#SB.state.bungee.vel_blur               = 0.0
# Distance from camera at which the bungee cord fades in.  1 or higher.
#SB.state.bungee.fade_dist              = 2.0
# Radius of the player, while bungeeing.
#SB.state.bungee.player_radius          = 1.0

# Constants affecting the player's movement on the horizontal(x/z) plane.
########################
# Padding around the edges of the player's movement.  Increase this to ensure
# that the player is able to reach all the way to the edges.  I.e. since the
# analog control pad does not go all the way to the extremes, increase this value
# to narrow the control pad extremes.  Valid values are between 0 and 0.25.
#SB.state.bungee.horizontal.edge_zone   = 0.05
# Horizontal sway force.  The higher this is, the easier it is for the player to
# move.
#SB.state.bungee.horizontal.sway            = 3.0
# The movement decay factor.  Controls how much of the movement velocity is
# kept per frame.  Valid values are in the range 0 to 1,
#SB.state.bungee.horizontal.decay       = 0.95

# Constants affecting the dive action.
########################
# Time during which a dive accelerates.  This value also specifies how quickly
# SB animates into a dive.
#SB.state.bungee.dive.time              = 0.5
# Specifies how long it takes for the dive to animate from the dive animation to
# the normal cycle animation. This does not effect the time spent accelerating
# downward.
#SB.state.bungee.dive.anim_out_time     = 0.5
# The minimum and maximum distance between which the dive can take place,
# expressed as a fraction of the player's vertical range.  For instance, if
# min_dist is .1, max_dist is .6, and the player's vertical movement is between
# 10 and 110 meters from the hook, the player may dive at any time while between
# 20 (10 + 100*.1) and 70 (10 + 100*.6) meters from the hook.  Note that the
# maximum distance must be greater than .5, since the player's rest position is
# at .5, otherwise a dive would not be possible from a complete stop..
#SB.state.bungee.dive.min_dist          = 0.0
#SB.state.bungee.dive.max_dist          = 0.6

# Playback options:
# PlaybackMode:  0 - off, 1 - record, 2 - play, 3 - play and dump frames
# PlaybackFile:  sets the filename to dump playback data into
# ScreenDumpPath sets the folder to dump into (for example, "c:\sb\dump\")
# ScreenDumpStartFrame and ScreenDumpEndFrame set a frame range to dump
# ForceCinematic:  if > 0, plays the nth cinematic in the scene
# ForceAllCinematics: if > 0, plays all cinematics in the scene for 2 seconds each
#
# To record:
#   1) Set PlaybackMode to 1
#   2) Run the game (controller data will be saved internally)
#   3) If you are happy with the recording, press triangle/Y on the debug
#      controller -- this will write the data to the PlaybackFile
#   4) Rerun the game with PlaybackMode set to 2 or 3 to play or play/dump the frames

# Screen dump stuff
#ScreenDumpPath = C:\SB04\BUILD_P2\Screenshots\
#ScreenDumpStartFrame    =  0
#ScreenDumpEndFrame      =  65535

PlaybackMode = 0
PlaybackFile = test.pbk
ScreenDumpPath = C:\SB04\BUILD_P2\Screenshots\
ScreenDumpStartFrame = 0
ScreenDumpEndFrame   = 65535
ForceCinematic       = 0
ForceAllCinematics   = 0

#--------------------------------------------------------------------------------
#   ScrFX Settings
#--------------------------------------------------------------------------------
ScrFxLetterBoxSize          = 32.0      # y pixel height for each bar (top and bottom)
ScrFxLetterBoxAlpha         = 255       # 255 opaque, 0 completely transparent


# Various cookie jar parameters
ShortbreadCookieJar         =   2.0

DebugMode = 
Region=
PlaybackStartFrame = 0
PlaybackEndFrame = 0
PlaybackResolution = 0
NoMovies = 0
NoCutscenes = 0

#--------------------------------------------------------------------------------
#  Initial task counter values (useful for debugging)  NOTE!!! this is the release build... restore after E3.
#--------------------------------------------------------------------------------
# 
#  Do not reorder these worlds.  They currently must be in this order
#  so that the task counter can be found in MNUC.
#
#  1st column sets World 
#  2nd - 6th columns set Task
#
#	Task counter meanings
#
#		0 = Task does not exist
#		1 = Task not given
#		2 = Task given
#		3 = Task completed
#
#  W A R N I N G ! ! !
#  W A R N I N G ! ! !
#  W A R N I N G ! ! !
#
#  !!! DO NOT CHANGE THIS TABLE WITHOUT ALSO CHANGING THE CORRESPONDING COUNTERS IN MNUC.SDF.
#  THE CODE THAT OVERRIDES THE SDF WITH THESE SETTINGS IS BROKEN WHEN A NEW GAME IS STARTED
#  AND AN INITIAL GAME SAVE IS CREATED, CAUSING NON-EXISTENT TASKS TO SHOW UP IN MENU !!! - RRD
#
#      	  World Name  Task1  Task2    Task3   Task4   Task5
#
TaskStatus =	BB02	0	0	0	0	0	0	# World 1
TaskStatus =	BB03	2	2	2	0	0	0	# World 2
TaskStatus =	BB01	2	2	0	0	0	0	# World 3
TaskStatus =	DE01	1	0	0	0	0	0	# World 4
TaskStatus =	DE02	2	2	0	0	0	0	# World 5
TaskStatus =	TT01	1	2	0	0	0	0	# World 6
TaskStatus =	TT02	2	0	0	0	0	0	# World 7
TaskStatus =	B101	1	0	0	0	0	0	# World 8
TaskStatus =	TR01	2	2	0	0	0	0	# World 9
TaskStatus =	TR02	2	2	2	0	0	0	# World 10
TaskStatus =	JK01	2	2	0	0	0	0	# World 11
TaskStatus =	B201	2	0	0	0	0	0	# World 12
TaskStatus =	GG01	0	0	0	0	0	0	# World 13 (Disabled, to be removed)
TaskStatus =	GG02	2	2	0	0	0	0	# World 14
TaskStatus =	SC02	2	0	0	0	0	0	# World 15
TaskStatus =	B301	2	0	0	0	0	0	# World 16
TaskStatus =	PT01	2	2	2	2	0	0	# World 17
TaskStatus =	PT02	0	0	0	0	0	0	# World 18
TaskStatus =	B401	0	0	0	0	0	0	# World 19

#--------------------------------------------------------------------------------
#  Unlockables list
#--------------------------------------------------------------------------------
#
#  This list describes the order of the unlockables on the Extras screen and
#  how many chests are needed to unlock each chest. 
#
#	Type meanings
#
#		1 = Movie
#		2 = Sound Bites
#		3 = Art
#		4 = Costume
#		5 = Function/Cheat
#
#		 ID = Which unlockable of this type is to be unlocked.
#
#	NumToUnlock = How many more chests are needed to unlock this chest
#		      after unlocking the previous chest.
#
#	Movies (1)
#	1-2 = Trailers 1-2
#	3-14 = Story FMVs (1-12)
#
#	Sound Bites (2) - See MNUI.SDF
#	Art (3)         - See MNUI.SDF
#
#	Costumes (4)
#	1 = PLSB - Mermaid SpongeBob
#	2 = PLSD - Plain Spongebob
#	3 = PLPB - Disco Pat
#	4 = PLP1 - Naked Pat
#
#	CheatIDs (5)
#	1 = Alt Target Hand
#	2 = Alternate OOB Hand
#	3 = Alt Car Horn
#	4 = Long Antenna
#	5 = Antenna Fountain
#	6 = Tiny Foggers
#	7 = Magnetic Pickup
#
#	Type	ID	NumToUnlock	Order
#
Extra =	5	7	0		# 1
Extra =	4	1	1		# 2
Extra =	5	4	1		# 3
Extra =	3	1	1		# 4
Extra =	2	1	1		# 5
Extra =	1	2	1		# 6
Extra =	5	1	1		# 7
Extra =	1	3	1		# 8
Extra =	3	2	1		# 9
Extra =	3	8	1		# 10
Extra =	2	2	1		# 11
Extra =	5	5	1		# 12
Extra =	1	4	1		# 13
Extra =	3	3	1		# 14
Extra =	1	5	1		# 15
Extra =	2	3	1		# 16
Extra =	5	2	1		# 17
Extra =	1	6	1		# 18
Extra =	2	4	1		# 19
Extra =	4	3	1		# 20
Extra =	1	7	1		# 21
Extra =	3	4	1		# 22
Extra =	1	8	1		# 23
Extra =	2	5	1		# 24
Extra =	5	6	1		# 25
Extra =	1	9	1		# 26
Extra =	2	6	1		# 27
Extra =	3	5	1		# 28
Extra =	1	10	1		# 29
Extra =	2	7	1		# 30
Extra =	5	3	1		# 31
Extra =	4	4	1		# 32
Extra =	2	8	1		# 33
Extra =	3	6	1		# 34
Extra =	1	11	1		# 35
Extra =	2	9	1		# 36
Extra =	3	7	1		# 37
Extra =	1	12	1		# 38
Extra =	5	7	1		# 39
Extra =	1	13	1		# 40
Extra =	4	2	1		# 41
Extra =	1	14	1		# 42

#--------------------------------------------------------------------------------
#  Alternate costume list
#  e.g. 
#      AlternateCostumeMapping = BB01 PLS2 PLSA
#      Substitutes costume PLSA for PLS2 if the costume is unlocked.
#--------------------------------------------------------------------------------
AlternateCostumeMapping = BB02 PLS1 PLSA
AlternateCostumeMapping = DE01 PLS3 PLSB
AlternateCostumeMapping = TR02 PLS5 PLSC
AlternateCostumeMapping = PT01 PLS3 PLSD
AlternateCostumeMapping = BB03 PLP2 PLPA
AlternateCostumeMapping = JK01 PLP3 PLPB
AlternateCostumeMapping = TT01 PLP4 PLPC


